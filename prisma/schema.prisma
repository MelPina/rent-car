generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Vehiculo {
  id                String            @id @default(uuid())
  userId            String
  descripcion       String
  noChasis          String
  noMotor           String
  noPlaca           String
  tpVehiculoId      String
  marcaId           String
  modeloId          String
  tpCombustibleId   String
  estado            Boolean
  photo             String
  isPublish         Boolean?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  tpVehiculo        TipoVehiculo      @relation(fields: [tpVehiculoId], references: [id])
  marca             Marca             @relation(fields: [marcaId], references: [id])
  modelo            Modelo            @relation(fields: [modeloId], references: [id])
  tpCombustible     TipoCombustible   @relation(fields: [tpCombustibleId], references: [id])
  Inspecciones      Inspeccion[]
  RentaDevoluciones RentaDevolucion[]

  @@index([tpVehiculoId])
  @@index([marcaId])
  @@index([modeloId])
  @@index([tpCombustibleId])
}

model TipoVehiculo {
  id          String     @id @default(uuid())
  descripcion String
  estado      Boolean
  Vehiculos   Vehiculo[]
}

model Marca {
  id          String     @id @default(uuid())
  descripcion String
  estado      Boolean
  Modelos     Modelo[]
  Vehiculos   Vehiculo[]
}

model Modelo {
  id          String     @id @default(uuid())
  idMarca     String
  descripcion String
  estado      Boolean
  marca       Marca      @relation(fields: [idMarca], references: [id])
  Vehiculos   Vehiculo[]

  @@index([idMarca])
}

model TipoCombustible {
  id          String     @id @default(uuid())
  descripcion String
  estado      Boolean
  Vehiculos   Vehiculo[]
}

model Cliente {
  id                String            @id @default(uuid())
  nombre            String
  cedula            String
  noTarjetaCr       String
  limiteCredito     Float
  tipoPersona       String
  estado            Boolean
  Inspecciones      Inspeccion[]
  RentaDevoluciones RentaDevolucion[]
}

model Empleado {
  id                String            @id @default(uuid())
  nombre            String
  cedula            String
  tandaLabor        String
  porcientoComision Float
  fechaIngreso      DateTime
  estado            Boolean
  Inspecciones      Inspeccion[]
  RentaDevoluciones RentaDevolucion[]
}

model Inspeccion {
  id                  String   @id @default(uuid())
  vehiculoId          String
  clienteId           String
  tieneRalladuras     Boolean
  cantidadCombustible String
  tieneGomaRespuesta  Boolean
  tieneGato           Boolean
  tieneRoturasCristal Boolean
  estadoGomas         String
  fecha               DateTime
  empleadoId          String
  estado              Boolean
  userId              String
  vehiculo            Vehiculo @relation(fields: [vehiculoId], references: [id])
  cliente             Cliente  @relation(fields: [clienteId], references: [id])
  empleado            Empleado @relation(fields: [empleadoId], references: [id])

  @@index([vehiculoId])
  @@index([clienteId])
  @@index([empleadoId])
  @@index([userId])
}

model RentaDevolucion {
  id              String   @id @default(uuid())
  empleadoId      String
  userId          String
  vehiculoId      String
  clienteId       String
  fechaRenta      DateTime
  fechaDevolucion DateTime
  montoPorDia     Float
  cantidadDias    Int
  comentario      String
  estado          Boolean
  empleado        Empleado @relation(fields: [empleadoId], references: [id])
  vehiculo        Vehiculo @relation(fields: [vehiculoId], references: [id], onDelete: Cascade)
  cliente         Cliente  @relation(fields: [clienteId], references: [id])

  @@index([empleadoId])
  @@index([vehiculoId])
  @@index([clienteId])
  @@index([userId])
}

model Car {
  id           String   @id @default(uuid())
  userId       String
  name         String
  CV           String
  transmission String
  people       String
  photo        String
  priceDay     String
  engine       String
  type         String
  isPublish    Boolean?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  oders        Order[]
}

model Order {
  id           String   @id @default(uuid())
  carId        String
  carName      String
  userId       String
  orderDate    DateTime @default(now())
  orderEndDate DateTime @default(now())
  status       String
  totalAmount  String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  car          Car      @relation(fields: [carId], references: [id], onDelete: Cascade)

  @@index([carId])
  @@index([userId])
}
